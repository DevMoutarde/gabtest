<?php
#MONSITE/PlateformBundle/Repository/AdvertRepository.php

namespace MONSITE\PlateformBundle\Repository;

use Doctrine\ORM\QueryBuilder;

use Doctrine\ORM\EntityRepository;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends EntityRepository
{
    
    public function myOwnFindAll(){
        
        #construction de la requête retournant la totalité
        $queryBuilder = $this->createQueryBuilder('a');
        
        #récupèration de la requête
        $query = $queryBuilder->getQuery();
        
        #retour des résultat
        return $query;
    }
    
    public function myFindAll(){
        
        return $this
                ->createQueryBuilder('a')
                ->getQuery()
                ->getResult();
    }
    
    public function myFindOne($id){
        
        $qb = $this->createQueryBuilder('a');
        
        $qb->where('a.id = :id')->setParameter('id', $id);
        
        $result = $qb->getQuery()->getResult();
        
        return $result;
                
        
    }
    
    public function findByAuthorAndDate($author, $year){
        
        $qb = $this->createQueryBuilder('a');
        
        $qb->where('a.author = :author')
                ->setParameter('author', $author)
            ->andWhere('a.date < :year')
                ->setParameter('year', $year)
            ->orderBy('a.date', 'DESC');
        
        return $qb->getQuery()->getResult();
    }
    
    
    public function myFindParameter(){
        
        $qb = $this->createQueryBuilder('a');
        
        $qb->where('a.author = :author')
           ->setParameter('author', 'Gab');
        
        $this->whereCurrentYear($qb);
        
        $qb->orderBy('a.date', 'DESC');
        
        return $qb->getQuery()->getResult();
    }
    
    public function whereCurrentYear(QueryBuilder $qb){
        
        $qb->andWhere('a.date BETWEEN :start AND :end')
           ->setParameter('start', new \Datetime(date('Y').'-01-01'))
           ->setParameter('end', new \Datetime(date('Y').'-12-31'));
    }
    
    public function myFindAllDQL(){
        
        $query = $this->_em->createQuery('SELECT a FROM MONSITEPlateformBundle:Advert a');
        $results = $query->getResult();
        
        return $results;
    }
    
    public function findById($id){
        
        $query = $this->_em->createQuery('SELECT a from MONSITEPlateformBundle:Advert a WHERE a.id = :id');
        $query->setParameter('id', $id);
        
        return $query->getSingleResult();
    }
    
    public function getAdvertWithApplications(){
        
        $list = array('Sam', 'Guillaume');
        $qb = $this
                ->createQueryBuilder('a')
                ->join('a.applications', 'app')
                ->addSelect('app');
        
        $qb->where($qb->expr()->in('app.author', $list));
        
        
        
        return $qb->getQuery()->getResult();
             
    }
    
    public function getPublishedQueryBuilder(){
        return $this
                ->createQueryBuilder('a')
                ->where('a.published = :published')
                ->setParameter('published', true);
        
        
    }
    
    
    
    
}
